[{"/Users/admin/StudyReact/task-tracker/src/index.js":"1","/Users/admin/StudyReact/task-tracker/src/App.js":"2","/Users/admin/StudyReact/task-tracker/src/reportWebVitals.js":"3","/Users/admin/StudyReact/task-tracker/src/components/Header.js":"4","/Users/admin/StudyReact/task-tracker/src/components/Button.js":"5","/Users/admin/StudyReact/task-tracker/src/components/Tasks.js":"6","/Users/admin/StudyReact/task-tracker/src/components/Task.js":"7","/Users/admin/StudyReact/task-tracker/src/components/AddTask.js":"8","/Users/admin/StudyReact/task-tracker/src/components/Footer.js":"9","/Users/admin/StudyReact/task-tracker/src/components/Navbar.js":"10","/Users/admin/StudyReact/task-tracker/src/components/About.js":"11"},{"size":500,"mtime":1611949020416,"results":"12","hashOfConfig":"13"},{"size":3307,"mtime":1612095267131,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611949020417,"results":"15","hashOfConfig":"13"},{"size":537,"mtime":1611967383931,"results":"16","hashOfConfig":"13"},{"size":452,"mtime":1611961838696,"results":"17","hashOfConfig":"13"},{"size":306,"mtime":1611964415018,"results":"18","hashOfConfig":"13"},{"size":442,"mtime":1611964998798,"results":"19","hashOfConfig":"13"},{"size":1434,"mtime":1611966485957,"results":"20","hashOfConfig":"13"},{"size":156,"mtime":1612092479099,"results":"21","hashOfConfig":"13"},{"size":295,"mtime":1612094544840,"results":"22","hashOfConfig":"13"},{"size":231,"mtime":1612105789534,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"2lo5f6",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/StudyReact/task-tracker/src/index.js",[],["48","49"],"/Users/admin/StudyReact/task-tracker/src/App.js",["50"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const taskFromServer = await fetchTasks();\n      setTasks(taskFromServer);\n    };\n    getTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n\n    return data;\n  };\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  //Delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'Delete',\n    });\n\n    const newListTasks = tasks.filter((task) => task.id !== id);\n    setTasks(newListTasks);\n  };\n\n  //Toggle reminder\n\n  const toggleReminder = async (id) => {\n    const taskToggle = await fetchTask(id);\n\n    const updatedTask = { ...taskToggle, reminder: !taskToggle.reminder };\n    console.log(updatedTask);\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updatedTask),\n    });\n\n    const data = await res.json();\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n\n    // setTasks(\n    //   tasks.map((task) =>\n    //     // task.id === id ? { ...task, reminder: !task.reminder } : task\n    //     {\n    //       if (task.id === id) return { ...task, reminder: !task.reminder };\n    //       else return task;\n    //     }\n    //   )\n    // );\n  };\n\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    });\n\n    const newTask = await res.json();\n\n    setTasks([...tasks, newTask]);\n\n    // const id = Math.floor(Math.random() * 10000) + 1;\n\n    // setTasks([...tasks, { ...task, id: id }]);\n  };\n\n  const toggleAddTask = () => {\n    setShowAddTask((prev) => !prev);\n  };\n\n  return (\n    <Router>\n      <Navbar />\n\n      <Route\n        exact\n        path='/'\n        render={(props) => (\n          <div className='container'>\n            <Header toggleAddTask={toggleAddTask} showAddTask={showAddTask} />\n\n            {showAddTask && <AddTask onAdd={addTask} />}\n            {tasks.length > 0 ? (\n              <Tasks\n                tasks={tasks}\n                onDelete={deleteTask}\n                onToggle={toggleReminder}\n              />\n            ) : (\n              'No Tasks to show'\n            )}\n          </div>\n        )}\n      />\n      <Route exact path='/about' component={About} />\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/admin/StudyReact/task-tracker/src/reportWebVitals.js",[],"/Users/admin/StudyReact/task-tracker/src/components/Header.js",[],"/Users/admin/StudyReact/task-tracker/src/components/Button.js",[],"/Users/admin/StudyReact/task-tracker/src/components/Tasks.js",[],"/Users/admin/StudyReact/task-tracker/src/components/Task.js",[],"/Users/admin/StudyReact/task-tracker/src/components/AddTask.js",[],"/Users/admin/StudyReact/task-tracker/src/components/Footer.js",[],"/Users/admin/StudyReact/task-tracker/src/components/Navbar.js",[],"/Users/admin/StudyReact/task-tracker/src/components/About.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":5,"column":10,"nodeType":"57","messageId":"58","endLine":5,"endColumn":20},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'FaTrashAlt' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]